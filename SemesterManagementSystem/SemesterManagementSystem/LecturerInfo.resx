<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>